name: .NET Core WinForms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: Stalker.sln  
      Project_Path: Stalker.csproj  

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install .NET Workloads
      run: dotnet workload install

    # Install MSBuild on the runner
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # Restore dependencies
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:OutputPath=./bin/$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Publish the application to a folder
    - name: Publish the application
      run: |
        dotnet publish $env:Project_Path -c ${{ matrix.configuration }}  -r win-x64 -o ./published
      env:
        Configuration: ${{ matrix.configuration }}

    # Zip the published files (Optional step)
    - name: Zip the published files
      run: |
        Compress-Archive -Path ./published/* -DestinationPath ./AppPackages/Stalker.exe

    # List the files in AppPackages to verify the exe file exists
    - name: List files in AppPackages
      run: |
        ls ./AppPackages

    # Create a tag for the release
    - name: Create tag
      run: |
        echo "Creating tag: ${{ secrets.VERSION }}"
        git tag ${{ secrets.VERSION }}
        git push origin ${{ secrets.VERSION }}

    # Upload the app package to GitHub Release
    - name: Upload app package to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ secrets.VERSION }}
        files: ./AppPackages/*.zip  # Path to the zip package
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
